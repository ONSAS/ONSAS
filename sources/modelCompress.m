% Copyright (C) 2019, Jorge M. Perez Zerpa, J. Bruno Bazzano, Jean-Marc Battini, Joaquin Viera, Mauricio Vanzulli  
%
% This file is part of ONSAS.
%
% ONSAS is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
%
% ONSAS is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with ONSAS.  If not, see <https://www.gnu.org/licenses/>.

% script for storing solver's input/output data structures.

modelCurrState = struct ( 'timeIndex'               , timeIndex,...
                          'currTime'                , currTime,...
                          'Ut'                      , Ut, ...
                          'Udott'                   , Udott, ...
                          'Udotdott'                , Udotdott, ...
                          'dispsElemsMat'           , dispsElemsMat,...
                          'Strainst'                , Strainst,...
                          'Stresst'                 , Stresst, ...
                          'Fintt'                   , Fintt, ...
                          'Fmast'                   , Fmast, ...
                          'convDeltau'              , convDeltau, ...
                          'systemDeltauMatrix'      , systemDeltauMatrix, ...
                          'nKeigneg'                , nKeigneg, ...
                          'nKeigpos'                , nKeigpos, ...
                          'factorCrit'              , factorCrit ...
                        ) ;

BCsCurrState  = struct( 'constantFext'      , constantFext, ...
                        'loadFactorsFunc'   , loadFactorsFunc, ...
                        'variableFext'      , variableFext, ...
                        'currLoadFactor'    , currLoadFactor, ...
                        'nextLoadFactor'    , nextLoadFactor, ...
                        'neumdofs'          , neumdofs, ...
                        'KS'                , KS       , ...
                        'userLoadsFilename' , userLoadsFilename  );

modelProperties = struct( 'coordsElemsMat'          , coordsElemsMat,...
                          'Conec'                   , Conec,...
                          'secGeomProps'            , secGeomProps, ...
                          'hyperElasParamsMat'      , hyperElasParamsMat, ...
                          'nnodes'                  , nnodes         , ...
                          'nelems'                  , nelems,...
                          'nodalDamping'            , nodalDamping,...         
                          'booleanScreenOutput'     , booleanScreenOutput, ...
                          'booleanConsistentMassMat', booleanConsistentMassMat, ...
                          'dampingMat'              , dampingMat ) ;

auxIO = struct(   'numericalMethodParams'    , numericalMethodParams    ...
                , 'stabilityAnalysisBoolean' , stabilityAnalysisBoolean ...
                , 'problemName'              , problemName              ...
                , 'outputDir'                , outputDir                ...
                , 'timeStepStopCrit'         , timeStepStopCrit         ...
                , 'timeStepIters'            , timeStepIters            ... 
              ) ;
